<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1477523975356">{:repl-history {:ide [], :local [&quot;(gui '((0 0 0) (0 0 0) (0 0 0)))&quot; &quot;(reduce println '(1 2))&quot; &quot;(reduce println (0 1 2))&quot; &quot;(reduce println '(0 1 2))&quot; &quot;(gui_cloj '((0 0 0) (0 0 0) (0 0 0)))&quot; &quot;(gui_cloj ((0 0 0)))&quot; &quot;(gui_cloj '(0 0 0))&quot; &quot;(gui_cloj (1))&quot; &quot;(gui_cloj ('(0 0 0)))&quot; &quot;(interpose | '(0 0 0))&quot; &quot;(interpose \&quot;|\&quot; '(0 0 0))&quot; &quot;(apply str (interpose \&quot;|\&quot; '(0 0 0)))&quot; &quot;(apply str \&quot;|\&quot; (interpose \&quot;|\&quot; '(0 0 0)) \&quot;|\&quot;)&quot; &quot;(doall (apply str \&quot;|\&quot; (interpose \&quot;|\&quot; '(0 0 0)) \&quot;|\&quot;))&quot; &quot;(map #( println (apply str %)) [\&quot;|\&quot; (interpose \&quot;|\&quot; '(0 0 0)) \&quot;|\&quot;]))&quot; &quot;(map #(apply str %) [\&quot;|\&quot; (interpose \&quot;|\&quot; '(0 0 0)) \&quot;|\&quot;])&quot; &quot;(println (map #(apply str %) [\&quot;|\&quot; (interpose \&quot;|\&quot; '(0 0 0)) \&quot;|\&quot;]))&quot; &quot;(println (map #(apply str %) [\&quot;|\&quot;(interpose \&quot;|\&quot; '(0 0 0))\&quot;|\&quot;]))&quot; &quot;(map #(apply str %) [\&quot;|\&quot;(interpose \&quot;|\&quot; '(0 0 0))\&quot;|\&quot;]))&quot; &quot;(map #(apply str %) [\&quot;|\&quot;(interpose \&quot;|\&quot; '(0 0 0))\&quot;|\&quot;])&quot; &quot;(map #(apply str \&quot;|\&quot; % \&quot;|\&quot;) [(interpose \&quot;|\&quot; '(0 0 0))])&quot; &quot;(map #(apply str % ) [\&quot;|\&quot;(interpose \&quot;|\&quot; '(0 0 0))] \&quot;|\&quot;)&quot; &quot;(map #(apply str % ) [\&quot;|\&quot;(interpose \&quot;|\&quot; '(0 0 0)) \&quot;|\&quot;])&quot; &quot;(concat \&quot;|\&quot;(apply str (interpose \\| '(0 0 0))))&quot; &quot;(concat \\| (apply str (interpose \\| '(0 0 0))))&quot; &quot;(concat '(\\|) (apply str (interpose \\| '(0 0 0))))&quot; &quot;(apply str (interpose \\| '(0 0 0)))&quot; &quot;(apply str \\| (interpose \\| '(0 0 0)) \&quot;|\&quot;)&quot; &quot;(apply str \\| (interpose \\| '(0 0 0)) \\|)&quot; &quot;(apply str \\| (interpose \\| '(0 0 0 )) \\|)&quot; &quot;(apply str \\| (interpose \\| '(0 0 0 )))&quot; &quot;(apply str \\| (interpose \\| '(0 0 0 \&quot;\&quot;)))&quot; &quot;(apply str \\| \\| (interpose \\| '(0 0 0)))&quot; &quot;(apply str \\| '(0 | 0 | 0) \\|)&quot; &quot;(apply str [\\| (interpose \\| '(0 0 0)) \\|])&quot; &quot;1&quot; &quot;(apply str [\\| (interpose \\| '(0 0 0))])&quot; &quot;(apply str \\| (interpose \\| '(0 0 0)))&quot; &quot;(concat [(apply str \\| (interpose \\| '(0 0 0)))] \\|)&quot; &quot;(concat [(apply str \\| (interpose \\| '(0 0 0))) \\|])&quot; &quot;(concat [(apply str \\| (interpose \\| '(0 0 0))) \&quot;|\&quot;])&quot; &quot;(str (apply str \\| (interpose \\| '(0 0 0))) \&quot;|\&quot;)&quot; &quot;(str (apply str \\| (interpose \\| '(0 0 0))) \\|)&quot; &quot;(def board '((0 0 0) (0 0 0) (0 0 0)))&quot; &quot;(map inc board)&quot; &quot;(map #(println %) board)&quot; &quot;(map #(println (str (apply str \\| (interpose \\| %)) \\|)) board)&quot; &quot;(gui_cloj board)&quot; &quot;(-main)&quot; &quot;(def board ((0 0 0)))&quot; &quot;(def board '((0 0 0)))&quot; &quot;(def concat (0 0 0) board) &quot; &quot;(concat (0 0 0) board)&quot; &quot;(concat board (0 0 0))&quot; &quot;(concat board '(0 0 0))&quot; &quot;(board)&quot; &quot;(def board (concat board '(0 0 0)))&quot; &quot;(def board (concat board '((0 0 0))))&quot; &quot;board&quot; &quot;(ask_move 1 board)&quot; &quot;'(1 1)&quot; &quot;(println \&quot;HELLO!\&quot;)&quot; &quot;(def user_coordinates (read-line))&quot; &quot;'(1 2)&quot; &quot;user_coordinates&quot; &quot;(do (print \&quot;What's your name? \&quot;) (flush) (read-line))&quot; &quot;Clojure&quot; &quot;(println \&quot;Hello\&quot;)&quot; &quot;hey&quot; &quot;(println \&quot;Enter something&gt; \&quot;)\n(def x (read-line))\n(println (str \&quot;You typed \\\&quot;\&quot; x \&quot;\\\&quot;\&quot;))&quot; &quot;\&quot;hey\&quot;&quot; &quot;)&quot; &quot;(read-line)&quot; &quot;hey man&quot; &quot;(def board '((\&quot; \&quot; \&quot; \&quot; \&quot; \&quot;) (\&quot; \&quot; \&quot; \&quot; \&quot; \&quot;) (\&quot; \&quot; \&quot; \&quot; \&quot; \&quot;)))&quot; &quot;(gui board)&quot; &quot;(gui_imperative board)&quot;], :remote []}}</component>
</project>